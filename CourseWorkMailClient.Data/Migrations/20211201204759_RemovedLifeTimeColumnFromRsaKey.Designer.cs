// <auto-generated />
using System;
using CourseWorkMailClient.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseWorkMailClient.Data.Migrations
{
    [DbContext(typeof(KeyDbContext))]
    [Migration("20211201204759_RemovedLifeTimeColumnFromRsaKey")]
    partial class RemovedLifeTimeColumnFromRsaKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseWorkMailClient.Domain.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LetterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LetterId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountOfMessage")
                        .HasColumnType("int");

                    b.Property<int>("MailServerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Interlocutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastDESRsaKeyId")
                        .HasColumnType("int");

                    b.Property<int?>("LastMD5RsaKeyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastDESRsaKeyId");

                    b.HasIndex("LastMD5RsaKeyId");

                    b.ToTable("Interlocutors");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Keys.DESRsaKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeathTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DESRsaKeys");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Keys.MD5RsaKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeathTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MD5RsaKeys");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Letter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DESRsaKeyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalMessage")
                        .HasColumnType("bit");

                    b.Property<int?>("MD5RsaKeyId")
                        .HasColumnType("int");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathToFullMessageFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DESRsaKeyId");

                    b.HasIndex("FolderId");

                    b.HasIndex("MD5RsaKeyId");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.MailServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailServers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServerName = "gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            ServerName = "yandex.ru"
                        });
                });

            modelBuilder.Entity("InterlocutorLetter", b =>
                {
                    b.Property<int>("SendedLettersId")
                        .HasColumnType("int");

                    b.Property<int>("SendersId")
                        .HasColumnType("int");

                    b.HasKey("SendedLettersId", "SendersId");

                    b.HasIndex("SendersId");

                    b.ToTable("SendersSendedLetters");
                });

            modelBuilder.Entity("InterlocutorLetter1", b =>
                {
                    b.Property<int>("ReceivedLettersId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiversId")
                        .HasColumnType("int");

                    b.HasKey("ReceivedLettersId", "ReceiversId");

                    b.HasIndex("ReceiversId");

                    b.ToTable("ReceiversReceivedLetters");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Attachment", b =>
                {
                    b.HasOne("CourseWorkMailClient.Domain.Letter", null)
                        .WithMany("Attachments")
                        .HasForeignKey("LetterId");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Interlocutor", b =>
                {
                    b.HasOne("CourseWorkMailClient.Domain.Keys.DESRsaKey", "LastDESRsaKey")
                        .WithMany("Interlocutors")
                        .HasForeignKey("LastDESRsaKeyId");

                    b.HasOne("CourseWorkMailClient.Domain.Keys.MD5RsaKey", "LastMD5RsaKey")
                        .WithMany("Interlocutors")
                        .HasForeignKey("LastMD5RsaKeyId");

                    b.Navigation("LastDESRsaKey");

                    b.Navigation("LastMD5RsaKey");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Letter", b =>
                {
                    b.HasOne("CourseWorkMailClient.Domain.Keys.DESRsaKey", "DESRsaKey")
                        .WithMany()
                        .HasForeignKey("DESRsaKeyId");

                    b.HasOne("CourseWorkMailClient.Domain.Folder", "Folder")
                        .WithMany("Letters")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWorkMailClient.Domain.Keys.MD5RsaKey", "MD5RsaKey")
                        .WithMany()
                        .HasForeignKey("MD5RsaKeyId");

                    b.Navigation("DESRsaKey");

                    b.Navigation("Folder");

                    b.Navigation("MD5RsaKey");
                });

            modelBuilder.Entity("InterlocutorLetter", b =>
                {
                    b.HasOne("CourseWorkMailClient.Domain.Letter", null)
                        .WithMany()
                        .HasForeignKey("SendedLettersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWorkMailClient.Domain.Interlocutor", null)
                        .WithMany()
                        .HasForeignKey("SendersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterlocutorLetter1", b =>
                {
                    b.HasOne("CourseWorkMailClient.Domain.Letter", null)
                        .WithMany()
                        .HasForeignKey("ReceivedLettersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseWorkMailClient.Domain.Interlocutor", null)
                        .WithMany()
                        .HasForeignKey("ReceiversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Folder", b =>
                {
                    b.Navigation("Letters");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Keys.DESRsaKey", b =>
                {
                    b.Navigation("Interlocutors");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Keys.MD5RsaKey", b =>
                {
                    b.Navigation("Interlocutors");
                });

            modelBuilder.Entity("CourseWorkMailClient.Domain.Letter", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
